 def minutesPerDay(tme):
            hours, minutes = tme.split(':')
            return (hours * 60) + minutes

        def checkTime(tme, tmeRange):
            return minutesPerDay(tmeRange[0]) < minutesPerDay(tme) < tmeRange[1]

        i = 0
        j = 0
        while i < len(start) and j < len(end):
            if checkTime(time1, (start[i], end[j])):
                if checkTime(time2, (start[i], end[j])):
                    messages.error(request, "Invalid time")
            else:
                table1 = Table(name=name, day=day1, subject=subject, place=place,start=time1,end=time2)
                table1.save()
    return render(request, 'schedule.html')










                if Table.objects.filter(end1__gte=start[i], end1__lte=end[j]).exists():
                    # if Table.objects.filter(end1__range=(start[i], end[j])).exists():
                    messages.error(request, "You can't end on this time because it's reserved")
            i += 1
            j += 1
            table1 = Table(name=name, day=day1, subject=subject, place=place, start=time1, end=time2)
            table1.save()